{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Resource_Group_Name": {
            "parameterOrder": 1,
            "type": "string",
            "defaultValue": "Scrapper"
        },
        "Resource_Group_Admin": {
            "parameterOrder": 2,
            "type": "string",
            "defaultValue": "Scrapper"
        },
        "Resource_Group_Password": {
            "parameterOrder": 3,
            "type": "securestring",
            "defaultValue": ""
        },
        "Address_Prefix": {
            "parameterOrder": 4,
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "The network address space for the virtual network"
            }
        },
        "VMs_Subnet": {
            "parameterOrder": 5,
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Address space for the virtual network subnet (netmask 24)"
            }
        },
        "Number_of_Instances": {
            "parameterOrder": 6,
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of scrapper instances"
            }
        },
        "Query": {
            "parameterOrder": 7,
            "type": "string",
            "defaultValue": "dog"
        },
        "Language": {
            "parameterOrder": 8,
            "type": "string",
            "defaultValue": "en"
        },
        "Model_Address": {
            "parameterOrder": 9,
            "type": "string",
            "defaultValue": "https://my.dog.model"
        },
        "Server_URL": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "ip_prefix": "[substring(parameters('VMs_Subnet'), 0, add(1, lastIndexOf(parameters('VMs_Subnet'), '.')))]",
        "orchestrator_ip": "[concat(variables('ip_prefix'), '10')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "vnet",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('Address_Prefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "VirtualMachinesSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('VMs_Subnet')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "vnet/VirtualMachinesSubnet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'vnet')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('VMs_Subnet')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "nsg",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": { "protocol": "TCP", "sourcePortRange": "*", "destinationPortRange": "22", "sourceAddressPrefix": "*", "destinationAddressPrefix": "*", "access": "Allow", "priority": 300, "direction": "Inbound" }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "orchestrator-ip",
            "location": "[variables('location')]",
            "sku": { "name": "Standard" },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "orchestrator-ni",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'orchestrator-ip')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'vnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'VirtualMachinesSubnet')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAddress": "[variables('orchestrator_ip')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'orchestrator-ip')]" },
                            "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'VirtualMachinesSubnet')]" },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "orchestrator",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', 'orchestrator-ni')]"
            ],
            "properties": {
                "hardwareProfile": { "vmSize": "Standard_B2ms" },
                "storageProfile": {
                    "imageReference": { "publisher": "credativ", "offer": "Debian", "sku": "9-backports", "version": "latest" },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "orchestrator-disk",
                        "createOption": "FromImage",
                        "managedDisk": { "storageAccountType": "Premium_LRS" },
                        "diskSizeGB": 200
                    }
                },
                "osProfile": {
                    "computerName": "orchestrator",
                    "adminUsername": "[parameters('Resource_Group_Admin')]",
                    "adminPassword": "[parameters('Resource_Group_Password')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'orchestrator-ni')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "orchestrator-script",
                    "apiVersion": "2019-07-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', 'orchestrator')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.1",
                        "autoUpgradeMinorVersion": true,
                        "settings": { },
                        "protectedSettings": {
                            "commandToExecute": "[concat('sh Orchestrator.sh \"', variables('orchestrator_ip'), '\" \"', parameters('Query'), '\" \"', parameters('Language'), '\" \"', parameters('Model_Address'), '\" ', parameters('Number_of_Instances'))]",
                            "fileUris": [
                                "https://raw.githubusercontent.com/tiagordc/azure-arm-creator/master/azure/Scrapper/Orchestrator.sh"
                            ]  
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[concat('scrapper-', add(1, copyIndex()), '-ni')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'vnet')]"
            ],
            "copy": {
                "name": "ScrapperInterfaces",
                "count": "[parameters('Number_of_Instances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAddressVersion": "IPv4",
                            "privateIPAddress": "[concat(variables('ip_prefix'), add(11, copyIndex()))]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'VirtualMachinesSubnet')]" }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat('scrapper-', add(1, copyIndex()))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('scrapper-', add(1, copyIndex()), '-ni'))]"
            ],
            "copy": {
                "name": "ScrapperMachines",
                "count": "[parameters('Number_of_Instances')]"
            },
            "properties": {
                "hardwareProfile": { "vmSize": "Standard_A2_v2" },
                "storageProfile": {
                    "imageReference": { "publisher": "credativ", "offer": "Debian", "sku": "9-backports", "version": "latest" },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat('scrapper-', add(1, copyIndex()), '-disk')]",
                        "createOption": "FromImage",
                        "managedDisk": { "storageAccountType": "Premium_LRS" },
                        "diskSizeGB": 31
                    }
                },
                "osProfile": {
                    "computerName": "[concat('scrapper-', add(1, copyIndex()))]",
                    "adminUsername": "[parameters('Resource_Group_Admin')]",
                    "adminPassword": "[parameters('Resource_Group_Password')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('scrapper-', add(1, copyIndex()), '-ni'))]"
                        }
                    ]
                },
                "priority": "Spot",
                "evictionPolicy": "Deallocate",
                "billingProfile": { "maxPrice": -1 }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "[concat('scrapper-', add(1, copyIndex()), '-script')]",
                    "apiVersion": "2019-07-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', concat('scrapper-', add(1, copyIndex())))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.1",
                        "autoUpgradeMinorVersion": true,
                        "settings": { },
                        "protectedSettings": {
                            "commandToExecute": "[concat('sh Scrapper.sh \"', variables('orchestrator_ip'), '\" \"', parameters('Query'), '\" \"', parameters('Language'), '\" \"', parameters('Model_Address'), '\" ', copyIndex(), ' ', parameters('Number_of_Instances'))]",
                            "fileUris": [
                                "https://raw.githubusercontent.com/tiagordc/azure-arm-creator/master/azure/Scrapper/Scrapper.sh"
                            ]  
                        }
                    }
                }
            ]
        }
        
    ]
}